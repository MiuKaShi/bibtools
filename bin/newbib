#!/bin/bash
# Format and rename/move a pair of bib and pdf files

function usage() {
    echo "$(basename $0): Format and rename/move bibtex files"
    echo ""
    echo "USAGE: $(basename $0) [target_dir] bibfiles"
    echo "'target_dir' must be an existing directory."
    echo "Options:"
    echo "  -h  print this help"
    echo "  -n  show changes only (basic formatting is applied)"
    echo "  -f  full instead of abbreviated journal names"
    echo "  -u  do not change field contents"
    echo "      (.bibtex file is renamed to .bib)"
    exit $1
}
if [ $# -lt 1 ]; then usage 1; fi

# Default target dir for bibtex file.
targetdir=.

# Default options.
DRYRUN="" # No dry run option for bib-* tools.
ACTION="eval" # Execute commands (no dry run).
FULLNAME="" # Use long journal names.
KEEPVALUES="" # Edit selected field values.
SKIPJABBR="" # Journal may not be abbreviated.

# Parse command line options.
for arg; do
    # With option '-h' print usage and exit.
    if [[ "$arg" == "-h" ]]; then usage 0; fi
    # With option '-n' only print changes/actions.
    if [[ "$arg" == "-n" ]]; then
        DRYRUN="-n"
        ACTION="echo"
    fi
    # With option '-f' use full journal names.
    if [[ "$arg" == "-f" ]]; then FULLNAME="-u"; fi
    # With option '-u' keep field values unchanged.
    if [[ "$arg" == "-u" ]]; then KEEPVALUES="-u"; fi
done

if [ -z "${FULLNAME}" ] && [ -z "${DRYRUN}" ]
then
    # Journal will certainly be abbreviated, don't do again.
    SKIPJABBR="-s"
fi


# Iterate bib files.
for bibfile in "$@"
do
    # Skip options.
    test "$bibfile" != "-n" || continue
    test "$bibfile" != "-f" || continue
    test "$bibfile" != "-u" || continue

    # Optionally select target directory by argument.
    test -d "$bibfile" && {
        targetdir="${bibfile%/}"
        continue
    }

    # Skip if not a regular file.
    test -f "$bibfile" || {
        [[ "$bibfile" =~ ^- ]] \
            && echo "$(basename $0): $bibfile: Unknown option" >/dev/stderr \
            || echo "$(basename $0): $bibfile: File not found" >/dev/stderr;
        continue
    }

    # Format bibtex file.
    if [ -n "$DRYRUN" ]
    then
        # Apply basic formatting for dry run.
        bib-format -u "${bibfile}"
    fi
    bib-format ${KEEPVALUES} ${DRYRUN} "${bibfile}"

    # (Un)abbreviate journal name.
    bib-jabbr ${DRYRUN} ${FULLNAME} "${bibfile}"

    # Update citation key.
    bib-keyinsert -q ${SKIPJABBR} ${DRYRUN} "${bibfile}"

    # Future bibtex file name.
    newbibfile="$(bib-name ${SKIPJABBR} "${bibfile}" \
        | grep -o '[^ "]*\.pdf\.bib' | tail -n1)"

    # Rename bib and pdf file.
    test "./${bibfile}" == "${targetdir}/${newbibfile}" \
        || $ACTION "mv -i \"${bibfile}\" \"${targetdir}/${newbibfile}\"" || exit 1

    # Print file path and citation key.
    test -z "$DRYRUN" && grep -H @ "${targetdir}/${newbibfile}"
done
