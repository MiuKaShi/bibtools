#!/bin/bash
# Print citation read from bibtex file

FMTSTR='$authors, $journal $volume$number$pages ($year)\n$title\n$link\n'

function usage() {
    echo "Print citation read from bibtex file"
    echo "USAGE: $(basename $0) [-f str] bibfiles"
    echo "Options:"
    echo "  -h      print this help"
    echo "  -s      author forenames first"
    echo "  -f str  use format string 'str'"
    echo "Default format string:"
    echo "  '$FMTSTR'"
    echo "Field names:"
    echo "  authors, fauthor (first author), title, journal,"
    echo "  volume, number, pages, year, doi, url, link"
    exit $1
}
if [ $# -lt 1 ]; then usage 1; fi

# Default options.
LASTNAMEFIRST=1 # Print family name, first names in author list.

# Parse command line options.
for arg; do
    # With option '-h' print usage and exit.
    if [[ "$arg" == "-h" ]]; then usage 0; fi
    # With option '-s' print forenames first.
    if [[ "$arg" == "-s" ]]; then LASTNAMEFIRST=""; fi
done

if [[ "$1" == "-f" ]]
then
    [[ "$#" -ge 2 ]] && FMTSTR="$2" \
        || echo "Missing argument to option '-f'!" >/dev/stderr
    shift 2 || shift 1
fi


TMPDIR=$(mktemp -d)

# Function to replace latex by utf8 characters
function latex_to_utf() { # echo text | latex_to_utf
    sed \
          -e "s/\\\\'{a}/á/g" \
          -e "s/\\\\'{e}/é/g" \
          -e "s/\\\\'{i}/í/g" \
          -e "s/\\\\'{o}/ó/g" \
          -e "s/\\\\'{u}/ú/g" \
          -e "s/\\\\'{A}/Á/g" \
          -e "s/\\\\'{E}/É/g" \
          -e "s/\\\\'{I}/Í/g" \
          -e "s/\\\\'{O}/Ó/g" \
          -e "s/\\\\'{U}/Ú/g" \
          -e 's/\\"{a}/ä/g' \
          -e 's/\\"{o}/ö/g' \
          -e 's/\\"{u}/ü/g' \
          -e 's/\\"{A}/Ä/g' \
          -e 's/\\"{O}/Ö/g' \
          -e 's/\\"{U}/Ü/g' \
          -e 's/\\^{a}/â/g' \
          -e 's/\\^{e}/ê/g' \
          -e 's/\\^{i}/î/g' \
          -e 's/\\^{o}/ô/g' \
          -e 's/\\^{u}/û/g' \
          -e 's/\\^{A}/Â/g' \
          -e 's/\\^{E}/Ê/g' \
          -e 's/\\^{I}/Î/g' \
          -e 's/\\^{O}/Ô/g' \
          -e 's/\\^{U}/Û/g' \
          -e 's/\\v{c}/č/g' \
          -e 's/\\v{r}/ř/g' \
          -e 's/\\v{s}/š/g' \
          -e 's/\\v{z}/ž/g' \
          -e 's/\\v{C}/Č/g' \
          -e 's/\\v{R}/Ř/g' \
          -e 's/\\v{S}/Š/g' \
          -e 's/\\v{Z}/Ž/g' \
          -e 's/\\~{n}/ñ/g' \
          -e 's/\\~{N}/Ñ/g' \

}

# Function to remove latex macros such as \v{Z}.
# It treats nesting of curly braces up to third order.
function remove_macros() { # echo text | remove_macros
    sed -e 's/\\[a-z][a-z]*{\([^{}]*\)}/\1/g' \
        -e 's/\\[a-z][a-z]*{\([^{}]*{[^{}]*}[^{}]*\)}/\1/g' \
        -e 's/\\[a-z][a-z]*{\([^{}]*{[^{}]*{[^{}]*}[^{}]*}[^{}]*\)}/\1/g' \

}

# Function to get a field value from the first bib entry.
function getvalue() { # getvalue fieldname filename
    pattern="^ *$(sed 's/\(.\)/[\u\1\l\1]/' <<< $1) *="
    awk -v pattern="$pattern" '/^@/{nr+=1; if(nr>1) exit}
{if ($0 ~ pattern) print $0}' "$2" | grep -o '{[^{].*' | head -n1 \
    | latex_to_utf \
    | remove_macros \
    | sed -e 's/^{ *//;s/:*[}, ]*$//' \
          -e 's/[{}"\]//g'
}


# Iterate bib files (possibly '-' for standard input).
for bibfile in "$@"
do
    # Skip options.
    test "$bibfile" != "-s" || continue

    # Replace »name.pdf« by »name.pdf.bib«.
    bibfile=$(sed 's/\.pdf$/&.bib/' <<< "$bibfile")

    # Skip if not a regular file or standard input.
    test -f "$bibfile" -o "$bibfile" = "-" || {
        [[ "$bibfile" =~ ^- ]] \
            && echo "$(basename $0): $bibfile: Unknown option" >/dev/stderr \
            || echo "$(basename $0): $bibfile: File not found" >/dev/stderr;
        continue
    }
    filenr=$(($filenr + 1))

    # Split file to single entry files in temporary directory.
    awk -v dir=$TMPDIR -v fnr=$filenr '
BEGIN{nr=0}
/^@/{nr+=1}
{if (nr) print $0 > sprintf("%s/%d-%d", dir, fnr, nr)}' "$bibfile"
done


# Iterate temporary single entry bibtex files.
find "$TMPDIR"/ -mindepth 1 -type f | while read bibfile
do
    # Obtain field values.
    if grep -q @Book "$bibfile"
    then
        journal=$(getvalue Title "$bibfile")
        volume=$(getvalue Publisher "$bibfile")
    else
        journal=$(getvalue Journal "$bibfile" | sed -r 's/^The //')
        volume=$(getvalue Volume "$bibfile")
    fi
    title=$(getvalue Title "$bibfile")
    number=$(getvalue Number "$bibfile" | sed 's/./.&/')
    pages=$(getvalue Pages "$bibfile" | sed 's/-.*//;s/^/, /')
    year=$(getvalue Year "$bibfile")
    doi=$(getvalue Doi "$bibfile")
    url=$(getvalue Url "$bibfile")

    # Format list of authors as »Name, A. B., ...«.
    # - remove curly brackets, replace "A" by "A."
    # - split author list to one line per author
    # - put family name in front (\2, \1)
    #   (with workaround for French name Le Xxx)
    # - abbreviate first name
    # - abbreviate all middle names
    SWAPNAMES="'s/\([^,]*\), \(.*\)/\2 \1/'"
    test "$LASTNAMEFIRST" && SWAPNAMES="''"
    authors=$(getvalue Author "$bibfile" \
        | sed \
            -e 's/[{}]//g' \
            -e 's/\(\<[A-Z]\>\)\.*/\1./g' \
            -e 's/ and /\n/g' \
        | sed \
            -e 's/\<Le\> \([A-Z][^ ]*$\)/le \1/g' \
            -e '/,/!s/\(.*[A-Z][^ ]*\) \(.*\) *$/\2, \1/' \
            -e 's/^\<le\> \([A-Z]\)/Le \1/g' \
            -e 's/\(, [A-Z]\)[^. ][^ -]*/\1./' \
            -e ':x;s/\([A-Z]\.[ -][A-Z]\)[^. ][^ -]*/\1./;tx' \
        | eval sed $SWAPNAMES \
        | sed ':x;N;s/\n/, /;tx'
        )

    # Derived values.
    fauthor=$(sed 's/,.*//' <<< "$authors")
    test -n "$doi" && link="https://doi.org/$doi"
    test -n "$url" && link="$url"

    # Print citation.
    eval echo -e "\"$FMTSTR\"" | sed 's/  */ /g;s/, ,/,/g;s/, (/ (/g'
done

# Remove temporary directory.
rm -rf "$TMPDIR"
