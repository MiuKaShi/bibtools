#!/bin/bash
# Print citation read from bibtex file

FMTSTR='$authors, $journal $volume$number$pages ($year)\n$title\n$link\n'

function usage() {
    echo "Print citation read from bibtex file"
    echo "USAGE: $(basename $0) [-f str] bibfiles"
    echo "Options:"
    echo "  -h  print this help"
    echo "  -f str  format string 'str' for output, default:"
    echo "          '$FMTSTR'"
    echo "Field names:"
    echo "authors, fauthor (first author), title, journal, volume, number, pages, year, doi, link"
    exit $1
}
if [ $# -lt 1 ]; then usage 1; fi

# Default options.

# Parse command line options.
for arg; do
    # With option '-h' print usage and exit.
    if [[ "$arg" == "-h" ]]; then usage 0; fi
done

if [[ "$#" -ge 2 ]] && [[ "$1" == "-f" ]]
then
    FMTSTR="$2"
    shift 2
fi


TMPDIR=$(mktemp -d)

# Function to replace latex by utf8 characters
function latex_to_utf() { # echo text | latex_to_utf
    cat /dev/stdin \
    | sed \
          -e "s/\\\\'{a}/á/g" \
          -e "s/\\\\'{e}/é/g" \
          -e "s/\\\\'{i}/í/g" \
          -e "s/\\\\'{o}/ó/g" \
          -e "s/\\\\'{u}/ú/g" \
          -e "s/\\\\'{A}/Á/g" \
          -e "s/\\\\'{E}/É/g" \
          -e "s/\\\\'{I}/Í/g" \
          -e "s/\\\\'{O}/Ó/g" \
          -e "s/\\\\'{U}/Ú/g" \
          -e "s/\\\\^{a}/â/g" \
          -e "s/\\\\^{e}/ê/g" \
          -e "s/\\\\^{i}/î/g" \
          -e "s/\\\\^{o}/ô/g" \
          -e "s/\\\\^{u}/û/g" \
          -e "s/\\\\^{A}/Â/g" \
          -e "s/\\\\^{E}/Ê/g" \
          -e "s/\\\\^{I}/Î/g" \
          -e "s/\\\\^{O}/Ô/g" \
          -e "s/\\\\^{U}/Û/g" \
          -e "s/\\\\v{c}/č/g" \
          -e "s/\\\\v{r}/ř/g" \
          -e "s/\\\\v{s}/š/g" \
          -e "s/\\\\v{z}/ž/g" \
          -e "s/\\\\v{C}/Č/g" \
          -e "s/\\\\v{R}/Ř/g" \
          -e "s/\\\\v{S}/Š/g" \
          -e "s/\\\\v{Z}/Ž/g" \
    | cat
}

# Function to remove latex macros such as \v{Z}.
# It treats nesting of curly braces up to third order.
function remove_macros() { # echo text | remove_macros
    cat /dev/stdin \
        | sed 's/\\[a-z][a-z]*{\([^{}]*\)}/\1/g' \
        | sed 's/\\[a-z][a-z]*{\([^{}]*{[^{}]*}[^{}]*\)}/\1/g' \
        | sed 's/\\[a-z][a-z]*{\([^{}]*{[^{}]*{[^{}]*}[^{}]*}[^{}]*\)}/\1/g' \
        | cat
}

# Function to get a field value from the first bib entry.
function getvalue() { # getvalue fieldname filename
    awk -v pattern="^ *$1 *=" '/^@/{nr+=1; if(nr>1) exit}
{if ($0 ~ pattern) print $0}' "$2" | grep -o '{[^{].*' | head -n1 \
    | latex_to_utf \
    | remove_macros \
    | sed -e 's/^{ *//;s/:*[}, ]*$//' \
          -e 's/[{}"\]//g'
}


# Iterate bib files (possibly '-' for standard input).
for bibfile in "$@"
do
    # Replace »name.pdf« by »name.pdf.bib«.
    bibfile=$(sed 's/\.pdf$/&.bib/' <<< "$bibfile")

    # Skip if not a regular file or standard input.
    test -f "$bibfile" -o "$bibfile" = "-" || continue
    filenr=$(($filenr + 1))

    # Split file to single entry files in temporary directory.
    awk -v dir=$TMPDIR -v fnr=$filenr '
BEGIN{nr=0}
/^@/{nr+=1}
{if (nr) print $0 > sprintf("%s/%d-%d", dir, fnr, nr)}' "$bibfile"
done


# Iterate temporary single entry bibtex files.
for bibfile in "$TMPDIR"/*
do
    # Obtain field values.
    if grep -q @Book "$bibfile"
    then
        journal=$(getvalue Title "$bibfile")
        volume=$(getvalue Publisher "$bibfile")
    else
        journal=$(getvalue Journal "$bibfile" | sed -r 's/^The //')
        volume=$(getvalue Volume "$bibfile")
    fi
    title=$(getvalue Title "$bibfile")
    number=$(getvalue Number "$bibfile" | sed 's/./.&/')
    pages=$(getvalue Pages "$bibfile" | sed 's/-.*//;s/^/, /')
    year=$(getvalue Year "$bibfile")
    doi=$(getvalue Doi "$bibfile")
    fauthor=$(getvalue Author "$bibfile" \
            | sed 's/ and .*//;s/ *,.*//;s/.* //')

    # Format list of authors as »Name, A. B., ...« (experimental).
    authors=$(getvalue Author "$bibfile" \
        | sed 's/\([A-Z][a-z]*\), \([A-Z]\)[a-z][a-z]*/\1, \2./g' \
        | sed 's/\([A-Z][a-z]*\), \([A-Z]\)\. \([A-Z]\)[a-z][a-z]*/\1, \2. \3./g' \
        | sed 's/\([A-Z]\)[a-z][a-z]* \([A-Z]\)\./\1.\2./g' \
        | sed 's/[{}]//g;s/ and /, /g' \
        | sed 's/\([A-Z]\.\) \([A-Z]\.\)/\1\2/g' \
        | sed 's/\([A-Z]\.\) \([A-Z]\.\)/\1\2/g' \
        | sed 's/\([A-Z]\)[a-z]* \([A-Z]\)\./\1.\2./g' \
        | sed 's/\([A-Z][A-Z.]*\) \([a-z][a-z]* [A-Z][a-z]*\)\(,\|$\)/\2, \1.\3/g' \
        | sed 's/\([A-Z][A-Z.]*\) \([A-Z][a-z]*\)\(,\|$\)/\2, \1.\3/g' \
        | sed 's/\([A-Z]\.\)\([A-Z]\.\)/\1 \2/g' \
        | sed 's/\([A-Z]\.\)\([A-Z]\.\)/\1 \2/g' \
        | sed 's/\.\././g')

    # Derived values.
    test -n "$doi" && link="https://doi.org/$doi"

    # Print citation.
    eval echo -e "\"$FMTSTR\"" | sed 's/  */ /g;s/, ,/,/g;s/, (/ (/g'
done

# Remove temporary directory.
rm -rf "$TMPDIR"
