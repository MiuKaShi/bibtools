#!/bin/bash
# Sort bibfiles by citation keys

function usage() {
    echo "Sort bibfiles by citation keys"
    echo "USAGE: $(basename $0) bibfiles"
    echo "Options:"
    echo "  -c  check for sorted input only"
    echo "  -r  newest entries first (by year)"
    exit $1
}
if [ $# -lt 1 ]; then usage 1; fi

# Default options.
INPLACE=1 # Update source file.
OPTIONS=

# Parse command line options.
for arg; do
    # With option '-h' print usage and exit.
    if [[ "$arg" == "-h" ]]; then usage 0; fi
    # With option '-c' only show diff.
    if [[ "$arg" == "-c" ]]; then INPLACE=0; fi
    # With option '-r' show newest entries first.
    if [[ "$arg" == "-r" ]]; then OPTIONS="$OPTIONS -r"; fi
done


# Iterate bib files.
for bibfile in "$@"
do
    # Skip options.
    test "$bibfile" != "-c" || continue
    test "$bibfile" != "-r" || continue

    tmp=$(mktemp)
    bib-unite ${OPTIONS# } "$bibfile" > "$tmp" || { rm "$tmp"; exit 1; }
    if [ $INPLACE -eq 1 ]
    then
        # In case of changes override source file.
        diff -q "$tmp" "$bibfile" >/dev/null || mv "$tmp" "$bibfile" || rm "$tmp"
    else
        # Check for sorted input.
        diff -q "$tmp" "$bibfile" >/dev/null \
            && echo "File $bibfile is sorted" \
            || echo "File $bibfile is not sorted"
        rm "$tmp"
    fi
done
