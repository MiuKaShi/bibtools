#!/bin/bash
# Sort bibfiles by citation keys

function usage() {
    echo "Sort bibfiles by citation keys"
    echo "USAGE: $(basename $0) bibfiles"
    echo "Options:"
    echo "  -h  print this help"
    echo "  -c  check for sorted input only"
    echo "  -i  edit bibtex files in place"
    echo "  -r  newest entries first (by year)"
    exit $1
}
if [ $# -lt 1 ]; then usage 1; fi

# Default options.
CHECK=0 # Only check if sorted.
INPLACE=0 # Edit files in place.
OPTIONS=

# Parse command line options.
for arg; do
    # With option '-h' print usage and exit.
    if [[ "$arg" == "-h" ]]; then usage 0; fi
    # With option '-c' only show diff.
    if [[ "$arg" == "-c" ]]; then CHECK=1; fi
    # With option '-i' edit files in place.
    if [[ "$arg" == "-i" ]]; then INPLACE=1; fi
    # With option '-r' show newest entries first.
    if [[ "$arg" == "-r" ]]; then OPTIONS="$OPTIONS -r"; fi
done


# If not check only and not writing in place, sort all
# bibfiles and possibly stdandard input at once.
if [ $CHECK -eq 0 ] && [ $INPLACE -eq 0 ]
then
    # Iterate bib files.
    tmp=$(mktemp)
    for bibfile in "$@"
    do
        # Skip options.
        test "$bibfile" != "-c" || continue
        test "$bibfile" != "-i" || continue
        test "$bibfile" != "-r" || continue

        # Skip if not a regular file.
        test -f "$bibfile" -o "$bibfile" = "-" || {
            [[ "$bibfile" =~ ^- ]] \
                && echo "$(basename $0): $bibfile: Unknown option" >/dev/stderr \
                || echo "$(basename $0): $bibfile: File not found" >/dev/stderr;
            continue
        }

        # Append contents to temporary file.
        cat "$bibfile" >> "$tmp"
    done
    # Sort temporary file and print contents.
    bash $0 -i $OPTIONS "$tmp"
    cat "$tmp"
    rm "$tmp"
    exit 0
fi


# Iterate bib files.
for bibfile in "$@"
do
    # Skip options.
    test "$bibfile" != "-c" || continue
    test "$bibfile" != "-i" || continue
    test "$bibfile" != "-r" || continue

    # Skip if not a regular file.
    test -f "$bibfile" -o "$bibfile" = "-" || {
        [[ "$bibfile" =~ ^- ]] \
            && echo "$(basename $0): $bibfile: Unknown option" >/dev/stderr \
            || echo "$(basename $0): $bibfile: File not found" >/dev/stderr;
        continue
    }

    tmp=$(mktemp)
    bib-unite ${OPTIONS# } "$bibfile" > "$tmp" || { rm "$tmp"; exit 1; }
    if [ $CHECK -eq 1 ]
    then
        # Check for sorted input.
        diff -q "$tmp" "$bibfile" >/dev/null \
            && echo "File '$bibfile' is sorted" \
            || echo "File '$bibfile' is not sorted"
        rm "$tmp"
    elif [ $INPLACE -eq 1 ]
    then
        # Abort if reading from stdin.
        if [ "$bibfile" = "-" ]
        then
            echo "$(basename $0): skip standard input with option '-i'"
            rm "$tmp"
            exit 1
        fi
        # In case of changes override source file.
        diff -q "$tmp" "$bibfile" >/dev/null || mv "$tmp" "$bibfile" || rm "$tmp"
    fi
done
