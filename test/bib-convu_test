#!/bin/bash
# Test the bib-convu script.

# Minimum list of replacements (temporarily escape backslashes).
MIN_LATEX='
\\"{a} \\"{o} \\"{u} \\"{A} \\"{O} \\"{U}
\\^{a} \\^{e} \\^{i} \\^{o} \\^{u} \\^{s} \\^{A} \\^{E} \\^{I} \\^{O} \\^{U}
\\c{c}
\\&'

MIN_UNICODE='
ä ö ü Ä Ö Ü
â ê î ô û ŝ Â Ê Î Ô Û
ç
&'

# Additional list of replacements (temporarily escape backslashes).
ADD_LATEX='
\\"{i} \\"{n}
\\H{o} \\H{u} \\H{O} \\H{U}
\\k{a} \\k{e} \\k{A} \\k{E}
\\r{a} \\r{A}
\\v{c} \\v{r} \\v{s} \\v{z} \\v{C} \\v{R} \\v{S} \\v{Z}
\\~{a} \\~{n} \\~{A} \\~{N}
{\\ae} {\\oe} {\\ss} {\\l} {\\L} {\\o} {\\O}'

ADD_UNICODE='
ı̈ n̈
ő ű Ő Ű
ą ę Ą Ę
å Å
č ř š ž Č Ř Š Ž
ã ñ Ã Ñ
æ œ ß ł Ł ø Ø'

# Functions to check single character substitutions.
check_latex() {
    # Check for multiple replacements on one line, drop backslash escaping.
    latex=$(sed 's/\\\\/\\/g' <<< "$1 $1$1")
    unicode=$(sed 's/\\\\/\\/g' <<< "$2 $2$2")
    assertEquals "convert »$1« to »$2«" "$unicode" "$(bib-convu $* <<< "$latex")"
}

check_unicode() {
    # Check for multiple replacements on one line, drop backslash escaping.
    latex=$(sed 's/\\\\/\\/g' <<< "$1 $1$1")
    unicode=$(sed 's/\\\\/\\/g' <<< "$2 $2$2")
    assertEquals "keep »$2« as »$2«"    "$unicode" "$(bib-convu $* <<< "$unicode")"
}

# Initially fill variables into arrays.
oneTimeSetUp() {
  COUNT=0
  for char in $(tr ' ' '\n' <<< $MIN_LATEX)
  do
    COUNT=$(($COUNT + 1))
    MIN_LATEX_ARRAY[$COUNT]=$char
  done

  COUNT=0
  for char in $(tr ' ' '\n' <<< $MIN_UNICODE)
  do
    COUNT=$(($COUNT + 1))
    MIN_UNICODE_ARRAY[$COUNT]=$char
  done

  COUNT=0
  for char in $(tr ' ' '\n' <<< $ADD_LATEX)
  do
    COUNT=$(($COUNT + 1))
    ADD_LATEX_ARRAY[$COUNT]=$char
  done

  COUNT=0
  for char in $(tr ' ' '\n' <<< $ADD_UNICODE)
  do
    COUNT=$(($COUNT + 1))
    ADD_UNICODE_ARRAY[$COUNT]=$char
  done
}

# _____________________________________________________________________________

testLatexToUnicodeConversion() {
  i=0
  while [ $i -lt $COUNT ]
  do
    i=$(($i + 1))
    # Minimum list of replacements must be fulfilled with option -s.
    check_latex "${MIN_LATEX_ARRAY[$i]}" "${MIN_UNICODE_ARRAY[$i]}" -s
    check_latex "${MIN_LATEX_ARRAY[$i]}" "${MIN_UNICODE_ARRAY[$i]}"
    check_latex "${ADD_LATEX_ARRAY[$i]}" "${ADD_UNICODE_ARRAY[$i]}"
  done
}

testUnicodeToUnicodeUnchanged() {
  i=0
  while [ $i -lt $COUNT ]
  do
    i=$(($i + 1))
    check_unicode "${MIN_LATEX_ARRAY[$i]}" "${MIN_UNICODE_ARRAY[$i]}" -s
    check_unicode "${ADD_LATEX_ARRAY[$i]}" "${ADD_UNICODE_ARRAY[$i]}" -s
    check_unicode "${MIN_LATEX_ARRAY[$i]}" "${MIN_UNICODE_ARRAY[$i]}"
    check_unicode "${ADD_LATEX_ARRAY[$i]}" "${ADD_UNICODE_ARRAY[$i]}"
  done
}

# Load and run shUnit2.
. shunit2/shunit2
