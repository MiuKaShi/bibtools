#!/bin/bash
# Test the bib-convl script.

source $(dirname $0)/character_arrays.sh

# Functions to check single character substitutions.
check_unicode() {
    # Check for multiple replacements on one line, drop backslash escaping.
    latex=$(sed 's/\\\\/\\/g' <<< "$1 $1$1")
    unicode=$(sed 's/\\\\/\\/g' <<< "$2 $2$2")
    assertEquals "convert »$2« to »$1«" "$latex" "$(bib-convl $* <<< "$unicode")"
}

check_latex() {
    # Check for multiple replacements on one line, drop backslash escaping.
    latex=$(sed 's/\\\\/\\/g' <<< "$1 $1$1")
    unicode=$(sed 's/\\\\/\\/g' <<< "$2 $2$2")
    assertEquals "keep »$1« as »$1«"    "$latex" "$(bib-convl $* <<< "$latex")"
}

# _____________________________________________________________________________

testUnicodeToLatexConversion() {
  i=0; while [ $i -lt $MIN_COUNT ]; do i=$(($i + 1));
    # Minimum list of replacements must be fulfilled with option -s.
    check_unicode "${MIN_LATEX_ARRAY[$i]}" "${MIN_UNICODE_ARRAY[$i]}" -s
  done
  i=0; while [ $i -lt $ALL_COUNT ]; do i=$(($i + 1));
    check_unicode "${ALL_LATEX_ARRAY[$i]}" "${ALL_UNICODE_ARRAY[$i]}"
  done
}

testLatexToLatexUnchanged() {
  i=0; while [ $i -lt $ALL_COUNT ]; do i=$(($i + 1));
    check_latex "${ALL_LATEX_ARRAY[$i]}" "${ALL_UNICODE_ARRAY[$i]}" -s
    check_latex "${ALL_LATEX_ARRAY[$i]}" "${ALL_UNICODE_ARRAY[$i]}"
  done
}

# Load and run shUnit2.
. shunit2/shunit2
